buildscript {
  apply plugin: 'java'

  ext {
    springBootVersion = '1.5.14.RELEASE'
    lombokVersion = '1.18.2'
    restDocsVersion = '1.1.3.RELEASE'
  }

  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.10.2'
}

subprojects {
  apply plugin: "java"
  apply plugin: "idea"
  apply plugin: "org.springframework.boot"
  apply plugin: "org.asciidoctor.convert"

  idea {
    module {
      inheritOutputDirs = true
      outputDir = compileJava.destinationDir
      testOutputDir = compileTestJava.destinationDir
      jdkName = '1.7'
    }
  }

  group 'org.modularframework'
  version '1.0.0.BUILD-SNAPSHOT'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  repositories {
    maven {
      url "http://repo1.maven.org/maven2/"
    }
    mavenCentral()
    jcenter()
  }

  ext {
    snippetsDir = file('build/generated-snippets')
  }

  dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    compileOnly "org.springframework.boot:spring-boot-devtools"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    compile "org.apache.commons:commons-lang3:3.7"
    compile "commons-io:commons-io:2.5"
    compile "com.google.guava:guava:20.0"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompile "junit:junit:4.12"
    testCompile "org.jmock:jmock-junit4:2.8.2"
    testCompile "org.mockito:mockito-core:2.+"

    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:${restDocsVersion}"
  }

  compileJava.dependsOn(processResources)

  test {
    outputs.dir snippetsDir
  }

  asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
  }

  jar {
    dependsOn asciidoctor
      from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
      }
  }

  bootRepackage.enabled = false
}
